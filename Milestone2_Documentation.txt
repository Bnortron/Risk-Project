Original Design:
In our original design from milestone 1, we had used a previous version of zuul to allow us to utilize the console for command inputs. This is where we had used the RiskParser, CommandWords and Command class. The parser read the input from the console and used a tokenizer to determine the words inputted. If those words fit the allowed list of commands from CommandWords, it created a new Command object containing the input. 

To create the map, we had used two different text files. One text file containing all of the countries and which continent they belong to. This allowed for us to determine map placement and location. The other text file contains the list of countries. For each country, there is a list of the countries that are adjacent to the first country on the line. 

To implement the map, we made 2 classes. One called Continent and once called Country. The continent class contains the name of the continent and the list of countries within that continent. The list used for this was an arraylist as it allowed for an easier way to add the countries to the continent. The Country class contains an arraylist of adjacent countries as it allows for an easy way to iterate through the list and an easy way to add countries to the list.

The Player class itself has an arraylist of the countries that the player owns/captured. Within the RiskGame class, we had used arraylists to store the names of each player, the player objects, the list of countries and the list of continents. The methods in the RiskGame class called setC_C() and setAdjacent() utilize a scanner to read through the text file for the specified object. It then creates an object for each type of country and continent and then adds to an arraylist. The setAdjacents utilizes the arraylist within the country class and adds the country object into that list if the country exists in the list of countries.
Changes Made From Milestone 1:
Some changes that we had made between Milestone 1 and 2 was the addition of a GUI. The GUI classes extends JFrame and implements actionListener. It creates 3 different frames. One for the main menu to start/quit the game using a GridBagLayout for the content pane and a GridLayout for the main panel. One for the player creation where you select the number of players and input the names of the players using a GridBagLayout for the content pane and a GridLayout for the main panel. And one final one for the actual game itself using a GridBagLayout for the content pane and a GridLayout for the main panel. Each frame has buttons that use action listeners to find what event occurs. Each button relates to an action from the model. The main game frame has a few labels that describe the amount of troops the player has and a JList of the countries owned by that player.
